// <auto-generated />
using MTech.EFSample;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MTech.EFSample.Migrations
{
    [DbContext(typeof(AnimalContext))]
    [Migration("20210128054707_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MTech.Domain.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("MTech.Domain.Cow", b =>
                {
                    b.HasBaseType("MTech.Domain.Animal");

                    b.ToTable("Cow");
                });

            modelBuilder.Entity("MTech.Domain.Dog", b =>
                {
                    b.HasBaseType("MTech.Domain.Animal");

                    b.ToTable("Dog");
                });

            modelBuilder.Entity("MTech.Domain.Cow", b =>
                {
                    b.HasOne("MTech.Domain.Animal", null)
                        .WithOne()
                        .HasForeignKey("MTech.Domain.Cow", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MTech.Domain.Dog", b =>
                {
                    b.HasOne("MTech.Domain.Animal", null)
                        .WithOne()
                        .HasForeignKey("MTech.Domain.Dog", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.7.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using MTech.Entities.HelperClasses;
using MTech.Entities.FactoryClasses;
using MTech.Entities.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace MTech.Entities.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'Cow'.<br/><br/></summary>
	[Serializable]
	public partial class CowEntity : AnimalEntity
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static CowEntityStaticMetaData _staticMetaData = new CowEntityStaticMetaData();
		private static CowRelations _relationsFactory = new CowRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public new static partial class MemberNames
		{
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CowEntityStaticMetaData : AnimalEntityStaticMetaData
		{
			public CowEntityStaticMetaData()
			{
				SetEntityCoreInfo("CowEntity", InheritanceHierarchyType.TargetPerEntity, true, (int)MTech.Entities.EntityType.CowEntity, typeof(CowEntity), typeof(CowEntityFactory), false);
			}
		}

		/// <summary>Static ctor</summary>
		static CowEntity()
		{
		}

		/// <summary> CTor</summary>
		public CowEntity()
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CowEntity(IEntityFields2 fields) : base(fields)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CowEntity</param>
		public CowEntity(IValidator validator) : base(validator)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for Cow which data should be fetched into this Cow object</param>
		public CowEntity(System.Int32 id) : base(id)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for Cow which data should be fetched into this Cow object</param>
		/// <param name="validator">The custom validator object for this CowEntity</param>
		public CowEntity(System.Int32 id, IValidator validator) : base(id, validator)
		{
			InitClassEmpty();
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CowEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Gets a predicateexpression which filters on this entity. Only useful in entity fetches</summary>
		/// <param name="negate">Optional flag to produce a NOT filter, (true), or a normal filter (false, default). </param>
		/// <returns>ready to use predicateexpression</returns>
		public new static IPredicateExpression GetEntityTypeFilter(bool negate=false) { return ModelInfoProviderSingleton.GetInstance().GetEntityTypeFilter("CowEntity", negate); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{

			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		private void InitClassEmpty()
		{
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public new static CowRelations Relations { get { return _relationsFactory; } }

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace MTech.Entities
{
	public enum CowFieldIndex
	{
		///<summary>Id. Inherited from Animal</summary>
		Id_Animal,
		///<summary>Name. Inherited from Animal</summary>
		Name,
		///<summary>Type. Inherited from Animal</summary>
		Type,
		///<summary>Id. </summary>
		Id,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace MTech.Entities.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: Cow. </summary>
	public partial class CowRelations: AnimalRelations
	{

		/// <summary>Returns a new IEntityRelation object, between CowEntity and AnimalEntity over the 1:1 relation they have, which is used to build a target per entity hierarchy</summary>
		internal IEntityRelation RelationToSuperTypeAnimalEntity
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateHierarchyRelation(false, new[] { AnimalFields.Id, CowFields.Id }); }
		}

		/// <inheritdoc/>
		public override IEntityRelation GetSubTypeRelation(string subTypeEntityName)
		{
			return null;
		}
		
		/// <inheritdoc/>
		public override IEntityRelation GetSuperTypeRelation()	{ return this.RelationToSuperTypeAnimalEntity; }

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCowRelations
	{

		/// <summary>CTor</summary>
		static StaticCowRelations() { }
	}
}

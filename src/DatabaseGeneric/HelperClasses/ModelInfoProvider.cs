//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.7.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using MTech.LLBLGen.Entities.FactoryClasses;
using MTech.LLBLGen.Entities.RelationClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace MTech.LLBLGen.Entities.HelperClasses
{
	/// <summary>Singleton implementation of the ModelInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	public static class ModelInfoProviderSingleton
	{
		private static readonly IModelInfoProvider _providerInstance = new ModelInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static ModelInfoProviderSingleton()	{ }

		/// <summary>Gets the singleton instance of the ModelInfoProviderCore</summary>
		/// <returns>Instance of the FieldInfoProvider.</returns>
		public static IModelInfoProvider GetInstance()
		{
			return _providerInstance;
		}
	}

	/// <summary>Actual implementation of the ModelInfoProvider.</summary>
	internal class ModelInfoProviderCore : ModelInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="ModelInfoProviderCore"/> class.</summary>
		internal ModelInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores.</summary>
		private void Init()
		{
			this.InitClass();
			InitAnimalEntityInfo();
			InitCowEntityInfo();
			InitDogEntityInfo();
			InitTodoItemEntityInfo();
			InitWeatherForecastEntityInfo();
			this.BuildInternalStructures();
		}

		/// <summary>Inits AnimalEntity's info objects</summary>
		private void InitAnimalEntityInfo()
		{
			this.AddEntityInfo("AnimalEntity", string.Empty, new AnimalRelations(), new AnimalEntityFactory(), 0);			
			this.AddFieldIndexEnumForElementName(typeof(AnimalFieldIndex), "AnimalEntity");
			this.AddElementFieldInfo("AnimalEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)AnimalFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("AnimalEntity", "Name", typeof(System.String), false, false, false, true,  (int)AnimalFieldIndex.Name, 2147483647, 0, 0);
			this.AddElementFieldInfo("AnimalEntity", "Type", typeof(System.Int32), false, false, false, false,  (int)AnimalFieldIndex.Type, 0, 0, 10);
		}

		/// <summary>Inits CowEntity's info objects</summary>
		private void InitCowEntityInfo()
		{
			this.AddEntityInfo("CowEntity",  "AnimalEntity" , new CowRelations(), new CowEntityFactory(), 1);			
			this.AddFieldIndexEnumForElementName(typeof(CowFieldIndex), "CowEntity");
			this.AddElementFieldInfo("CowEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)CowFieldIndex.Id, 0, 0, 10);
		}

		/// <summary>Inits DogEntity's info objects</summary>
		private void InitDogEntityInfo()
		{
			this.AddEntityInfo("DogEntity",  "AnimalEntity" , new DogRelations(), new DogEntityFactory(), 1);			
			this.AddFieldIndexEnumForElementName(typeof(DogFieldIndex), "DogEntity");
			this.AddElementFieldInfo("DogEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)DogFieldIndex.Id, 0, 0, 10);
		}

		/// <summary>Inits TodoItemEntity's info objects</summary>
		private void InitTodoItemEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(TodoItemFieldIndex), "TodoItemEntity");
			this.AddElementFieldInfo("TodoItemEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)TodoItemFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("TodoItemEntity", "Title", typeof(System.String), false, false, false, false,  (int)TodoItemFieldIndex.Title, 128, 0, 0);
		}

		/// <summary>Inits WeatherForecastEntity's info objects</summary>
		private void InitWeatherForecastEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(WeatherForecastFieldIndex), "WeatherForecastEntity");
			this.AddElementFieldInfo("WeatherForecastEntity", "Date", typeof(Nullable<System.DateTime>), false, false, false, true,  (int)WeatherForecastFieldIndex.Date, 0, 0, 0);
			this.AddElementFieldInfo("WeatherForecastEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)WeatherForecastFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("WeatherForecastEntity", "Summary", typeof(System.String), false, false, false, true,  (int)WeatherForecastFieldIndex.Summary, 2147483647, 0, 0);
			this.AddElementFieldInfo("WeatherForecastEntity", "TemperatureC", typeof(Nullable<System.Int32>), false, false, false, true,  (int)WeatherForecastFieldIndex.TemperatureC, 0, 0, 10);
		}
	}
}